<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts-rsses on org to web</title>
    <link>https://thapakazi.github.io/posts/index.xml</link>
    <description>Recent content in Posts-rsses on org to web</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Dec 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://thapakazi.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>command line kungfu with zle</title>
      <link>https://thapakazi.github.io/posts/command_line_kungfu_with_zle/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/command_line_kungfu_with_zle/</guid>
      <description>

&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#org226f340&#34;&gt;Why this post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#org82be879&#34;&gt;Before we begin  | BASIC GOOD TO KNOW&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#orga017274&#34;&gt;Readline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#org8bbf164&#34;&gt;ZLE&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#org42e8437&#34;&gt;Making of our custom widget&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#org9448616&#34;&gt;My words to you dear friend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgbbef4f2&#34;&gt;Refrences&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a id=&#34;org226f340&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;why-this-post&#34;&gt;Why this post&lt;/h1&gt;

&lt;p&gt;I was always wondering why many of emacs keybindings work in
terminal. Being dependent on key combinations &lt;code&gt;ctrl+e&lt;/code&gt;, &lt;code&gt;ctrl+a&lt;/code&gt;,
&lt;code&gt;alt+t&lt;/code&gt;, &lt;code&gt;ctrl+t&lt;/code&gt; (my favorite)&amp;#x2026; every time i am fooling around the
terminal, it felt so badüëø if someone is navigating around pressing arrow keys
‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è&amp;#x2026;so maaaaanyyyy times, swagging them these nifty shortcuts is so
fun. Until my friend/&lt;a href=&#34;https://github.com/bnaysakya&#34;&gt;binaysakya üë®‚Äçüíª&lt;/a&gt; told me you should write about
these things. I realized I know nothing what those bindings
really meant ü§î
That&amp;rsquo;s how this post happened.
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;next candidate post, Alt +w , Ctrl + y, Ctrl +w , Ctrl + K&lt;/p&gt;&amp;mdash; ‡§Æ‡§ø‡§≤‡§® ‡§•‡§æ‡§™‡§æ (@thapakazi_) &lt;a href=&#34;https://twitter.com/thapakazi_/status/941178719871238144?ref_src=twsrc%5Etfw&#34;&gt;December 14, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;p&gt;I would sharing my learning below more aliened to ZLE. I have
copied the lines from the reference links below üôäüôàüôâ&lt;/p&gt;

&lt;p&gt;&lt;a id=&#34;org82be879&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;before-we-begin-basic-good-to-know&#34;&gt;Before we begin  | BASIC GOOD TO KNOW&lt;/h1&gt;

&lt;p&gt;Here we would look good to know theory that this post revolves
around, skipüöÄ these theory at your risk.&lt;/p&gt;

&lt;p&gt;&lt;a id=&#34;orga017274&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;readline-https-wiki-archlinux-org-index-php-readline&#34;&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/readline&#34;&gt;Readline&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Its a library used by bash and many of CLI programs to
edit/interact via command line. Readline uses &lt;code&gt;Emacs&lt;/code&gt; style
shortcuts as default, that&amp;rsquo;s why your &lt;code&gt;Ctrl+a&lt;/code&gt;,
&lt;code&gt;Ctrl+e&lt;/code&gt;&amp;#x2026; shortcuts works almost same in most of terminals, even the editors
derivations like sublime respectsüôá the style. And yes, because of
this it super easy to jump along the text interface with such a
ease ‚ò∫Ô∏è&lt;/p&gt;

&lt;p&gt;&lt;a id=&#34;org8bbf164&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;zle-http-zshwiki-org-home-zle-start&#34;&gt;&lt;a href=&#34;http://zshwiki.org/home/zle/start&#34;&gt;ZLE&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I have shifted to zsh like few years back, no speical reason still
playing back and forth between bash and zsh. Just love the random
theme from &lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh&#34;&gt;robbyrussell/oh-my-zsh&lt;/a&gt;.üòÑ till yesterday(22 dec 2017)
when I found this thing called &lt;a href=&#34;http://zshwiki.org/home/zle/start&#34;&gt;zle&lt;/a&gt;(ZSH LINE EDITOR) then I was like
oh my&amp;#x2026; its so üòçüòçüòç&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ZLE is a powerful line editor, what that means&amp;#x2026; ?&lt;/strong&gt;
Every shell provides some kind of editing capability although it
could be basic stuffs provided by os like enter character, delete
line, delete word. ZLE extends your capability to interact with
your shell with custom functions and custom key strokes, with
ease(will share it how in section below ‚¨áÔ∏è).&lt;/p&gt;

&lt;p&gt;Example you want to change some text you just typed in terminal to &lt;code&gt;UPPER Case&lt;/code&gt;. What you
can do with zle widget is just like in your editor:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;sample demo of both modes
please play along with your shell while you are going via this üó£&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://media.giphy.com/media/xULW8GUqMxfIZraLoQ/giphy.gif#floatright&#34; width=&#34;650px&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;VI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Set your key-maps to vi with &lt;code&gt;bindkey -v&lt;/code&gt;, and now you can use
your terminal like your vi &lt;code&gt;i&lt;/code&gt; :interactive mode and &lt;code&gt;ESC&lt;/code&gt; to command line mode&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;hello world&amp;quot; [ESC] [b] [b] [gUw] [w] [gUl] [Enter]
&lt;/code&gt;&lt;/pre&gt;

&lt;table border=&#34;2&#34; cellspacing=&#34;0&#34; cellpadding=&#34;6&#34; rules=&#34;groups&#34; frame=&#34;hsides&#34;&gt;
    
    
&lt;colgroup&gt;
&lt;col  class=&#34;org-left&#34; /&gt;
    
&lt;col  class=&#34;org-left&#34; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;[ESC]&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;: switch to cmd line mode&lt;/td&gt;
&lt;/tr&gt;
    
    
&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;[b] [b]&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;: jump back 2 words&lt;/td&gt;
&lt;/tr&gt;
    
    
&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;[gUw]&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;: where gU: activate to uppercase widget&lt;/td&gt;
&lt;/tr&gt;
    
    
&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;: w: apply to a word forward&lt;/td&gt;
&lt;/tr&gt;
    
    
&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;[w]&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;: jump a word forward&lt;/td&gt;
&lt;/tr&gt;
    
    
&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;[gUl]&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;: apply uppercase to a first char only&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;EMACS&lt;/strong&gt; (default):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo &amp;quot;hello world&amp;quot; [alt+b] [alt+b] [alt+u] [alt+c] [crtl+j]   
&lt;/code&gt;&lt;/pre&gt;

&lt;table border=&#34;2&#34; cellspacing=&#34;0&#34; cellpadding=&#34;6&#34; rules=&#34;groups&#34; frame=&#34;hsides&#34;&gt;
    
    
&lt;colgroup&gt;
&lt;col  class=&#34;org-left&#34; /&gt;
    
&lt;col  class=&#34;org-left&#34; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;alt+b alt+b:&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;jump back by 2 words&lt;/td&gt;
&lt;/tr&gt;
    
    
&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;alt+u      :&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;UPPERCASE hello&lt;/td&gt;
&lt;/tr&gt;
    
    
&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;alt+c      :&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;Uppercase W in world&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;ZLE in simple words:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ZLE is a bridge between you and your zsh shell&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:https-sgeb-io-posts-2014-04-zsh-zle-custom-widgets&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:https-sgeb-io-posts-2014-04-zsh-zle-custom-widgets&#34;&gt;0&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;ZLE provides a easy interface to extend the capability of zsh with our custom functions a.k.a &lt;code&gt;widgets&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;it&amp;rsquo;s scope is only within interactive shell&lt;/li&gt;
&lt;li&gt;comes with tons of default keybindings, supports both emacs(default),vi ~keymaps~(modes of editing, collection of keystrokes and interaction mode)&lt;/li&gt;
&lt;li&gt;comes with goodies like:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;where-is&lt;/code&gt; which help us quick look about keymaps&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zle -la&lt;/code&gt; : quick list all the widgets&lt;/li&gt;
&lt;li&gt;I am still learning, i am liking many small things like &lt;code&gt;[alt+x]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id=&#34;org42e8437&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;making-of-our-custom-widget&#34;&gt;Making of our custom widget&lt;/h1&gt;

&lt;p&gt;Lets write a widget to find the top 5 memory savages on my machine
at this moment. you can simply copy paste the following on your
running zsh or source it somewhere in your rc file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[step1]: To start with lets define a function, that invokes ps
with necessary formatting.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;_exec_ps_top_5(){
    echo &amp;quot;top 5 memory saveges on my machine...&amp;quot;
    PS_FORMAT=%mem,pid,ppid,cmd,comm,etime ps -e|sort -r|head -6
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[step2]: define a widget&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zle -N _exec_ps_top_5             # define a new widget
bindkey &#39;^@&#39; _exec_ps_top_5       # bind it to key ctrl+@
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[step3]: execute the widget&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;first check if widget is available or not&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zle -la|grep exec_ps
[alt+x] where-is [enter] _exec_ps[tab]
# expected output: _exec_ps_top_5 is on &amp;quot;^@&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;that means our widget is ready to use üòÑ&lt;/p&gt;

&lt;p&gt;Just press &lt;code&gt;[ctrl+@]&lt;/code&gt;, you will see sth like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;top 5 memory saveges on my machine...
%MEM   PID  PPID CMD                         COMMAND             ELAPSED
 4.1  1223   549 /opt/google/chrome/chrome - chrome                13:32
 3.2   415     1 /opt/google/chrome/chrome   chrome                13:41
 2.1   875   549 /opt/google/chrome/chrome - chrome                13:36
 1.9   618   415 /opt/google/chrome/chrome - chrome                13:37
 1.9  1743   549 /opt/google/chrome/chrome - chrome                13:18
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;üéâüéâüéâ Congrats, yeah that&amp;rsquo;s what it feels like üòå&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id=&#34;org9448616&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;my-words-to-you-dear-friend&#34;&gt;My words to you dear friend&lt;/h1&gt;

&lt;p&gt;Please go via the reference url below and explore for your self
what awesome things we can do with our shell. ZLE is kinda
simple&amp;amp;nice, lets make use of it to do tiny stuffs we repeatedly do
in our daily like maybe look after logs like &lt;code&gt;tail -f log/*.log&lt;/code&gt;,
start our docker containers, run our specs, yeah its could be
anything, I have so many alias,&lt;a href=&#34;https://github.com/thapakazi/kutto_kodalo&#34;&gt;functions&lt;/a&gt; I depend on everyday, now
I would have fun binding them to keystores of my choice üòâ&lt;/p&gt;

&lt;p&gt;Future Notes: maybe I would try write about readline in days to
come, still lot to learn üòÉ&lt;/p&gt;

&lt;p&gt;&lt;a id=&#34;orgbbef4f2&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;refrences&#34;&gt;Refrences&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;highly recomended: &lt;a href=&#34;https://sgeb.io/posts/2014/04/zsh-zle-custom-widgets/&#34;&gt;A closer look at the zsh line editor and creating custom widgets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zsh.sourceforge.net/Guide/zshguide04.html&#34;&gt;Chapter 4: The Z-Shell Line Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/zsh#Key_bindings&#34;&gt;Arch wiki::ZSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspiers/shell-env&#34;&gt;Adam&amp;rsquo;s UNIX shell environment&lt;/a&gt; so many goodies to learn from&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Urja Bigyan (Energy Science) Learnings Gist</title>
      <link>https://thapakazi.github.io/posts/analog_urja_bigyan_gist/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/analog_urja_bigyan_gist/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline2&#34;&gt;Day1&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline1&#34;&gt;Assignment:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline8&#34;&gt;Day2&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline3&#34;&gt;Biggest Celebration of Energy: Dashain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline4&#34;&gt;Five major source of energy:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline5&#34;&gt;Little on Ego Anger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline6&#34;&gt;Little on Stress:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline7&#34;&gt;Energy yet another prospective&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline14&#34;&gt;Day 3&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline9&#34;&gt;Sankalpa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline10&#34;&gt;Samarpaan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline11&#34;&gt;‡§¨‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡•à ‡§õ ‡§∏‡§¨‡•à ‡§â‡§∞‡•ç‡§ú‡§æ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline12&#34;&gt;Mantra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline13&#34;&gt;Tip/Tricks:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;day1-a-id-orgheadline2-a&#34;&gt;Day1&lt;a id=&#34;orgheadline2&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Two major sources: &lt;strong&gt;bhojan&lt;/strong&gt; and &lt;strong&gt;sakaratmak sochan&lt;/strong&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;4 major form of energy:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;physical energy{‡§≠‡•å‡§§‡§ø‡§ï ‡§∂‡§ï‡•ç‡§§‡§ø}{food, timing, exerciese‡§¨‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ, ‡§™‡•ç‡§∞‡§æ‡§£‡§æ‡§Ø‡§æ‡§Æ}&lt;/li&gt;
&lt;li&gt;mental energy{‡§¨‡§ø‡§∞‡§ö‡§æ‡§∞-‡§Æ‡§®‡§ï‡§ï‡•ã ‡§∂‡§ï‡•ç‡§§‡§ø}&lt;/li&gt;
&lt;li&gt;emotional energy{‡§≠‡§æ‡§µ ‡§¨‡§æ‡§ü ‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§π‡•Å‡§®‡•á ‡§∂‡§ï‡•ç‡§§‡§ø}&lt;/li&gt;
&lt;li&gt;spiritual energy{‡§Ö‡§æ‡§ß‡•ç‡§Ø‡§æ‡§§‡•ç‡§Æ‡§ø‡§ï ‡§∂‡§ï‡•ç‡§§‡§ø}
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The value of them is such&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;physical energy &amp;lt; mental energy by 125 to 1048 times&lt;/li&gt;
&lt;li&gt;mental energy &amp;lt; emotional energy by 1048 times&lt;/li&gt;
&lt;li&gt;emotional energy &amp;lt; spiritual energy by thousand of times, immeasurable
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But all of those are also like four major pillars of energy form inside us. They all are needed in a human life.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Karma: 3type {self, group, natural}&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Urja Bigyan, focus is on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;working your biggest problems with basis of energy&lt;/li&gt;
&lt;li&gt;aspiring sakaratmak swoch (+ve thinking) to deal with existing problems&lt;/li&gt;
&lt;li&gt;Kriya(steps) to empower the hidden energy&lt;/li&gt;
&lt;li&gt;primarily working with Sahasrara Chakra&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;assignment-a-id-orgheadline1-a&#34;&gt;Assignment:&lt;a id=&#34;orgheadline1&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Listing out the problems on above all four of those energy forms. If you have solutions write them aside.&lt;/p&gt;

&lt;h1 id=&#34;day2-a-id-orgheadline8-a&#34;&gt;Day2&lt;a id=&#34;orgheadline8&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h3 id=&#34;biggest-celebration-of-energy-dashain-a-id-orgheadline3-a&#34;&gt;Biggest Celebration of Energy: Dashain&lt;a id=&#34;orgheadline3&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;3 days kali, 3 days laxmi, 3 days sarawsoti, 10th day Durga&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;forgot the sanskrit quotes, will try read the dashain book this time ;)&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;five-major-source-of-energy-a-id-orgheadline4-a&#34;&gt;Five major source of energy:&lt;a id=&#34;orgheadline4&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Lakshya.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‡§Æ ‡§ï‡•á ‡§¨‡§®‡•ç‡§®‡•á ‡§π‡•ã ‡•§ ‡§Æ‡•à‡§≤‡•á solve ‡§ó‡§∞‡•ç‡§® ‡§∏‡§ï‡•ç‡§®‡•á ‡§∏‡§¨‡•à ‡§≠‡§®‡•ç‡§¶‡§æ ‡§†‡•Å‡§≤‡•ã ‡§∏‡§Æ‡•ç‡§∏‡§Ø‡§æ ‡§ï‡•á ‡§π‡•ã ? ‡§ú‡§§‡§ø ‡§†‡•Å‡§≤‡•ã ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§§‡•á‡§§‡§ø ‡§®‡•à ‡§†‡•Å‡§≤‡•ã ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø, ‡§Ö‡§∞‡•ç‡§•‡§æ‡§§ ‡§§‡•á‡§§‡§ø ‡§®‡•à ‡§†‡•Å‡§≤‡•ã ‡§â‡§¶‡•á‡§∂‡•ç‡§Ø ‡§ú‡§ø‡§µ‡§®‡§ï‡•ã ‡•§&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Balanced Bhojan, Balanced Karma(Workout), Balanced Rest(sleep)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Accidents/Incidents Conclusion driven based on fact.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‡§Ø‡§•‡§æ‡§∞‡•ç‡§• ‡§•‡§æ‡§π‡§æ ‡§®‡§™‡§æ‡§à, aafno ‡§ß‡§æ‡§∞‡§£‡§æ ‡§®‡§¨‡§®‡§æ‡§â‡§®‡•Å&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Balanced RelationShip{prem/bhakti bhaab}&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‡§∏‡§Æ‡•ç‡§¨‡§®‡•ç‡§ß ‡§¨‡§æ‡§ü ‡§â‡§∞‡•ç‡§ú‡§æ ‡§Ö‡§æ‡§â‡§õ, ‡§ú‡•ã ‡§π‡§æ‡§Æ‡•ç‡§∞‡•ã ‡§π‡•á‡§∞‡§æ‡§á‡§ï‡•ã ‡§Ö‡§æ‡§ß‡§æ‡§∞‡§Æ‡§æ ‡§¨‡§®‡•ç‡§¶ ‡§õ‡•§ ‡§™‡•ç‡§∞‡•á‡§Æ ‡§≠‡§æ‡§µ‡§≤‡•á ‡§ï‡•Å‡§®‡•à ‡§™‡§®‡§ø ‡§â‡§∞‡•ç‡§ú‡§æ‡§≤‡§æ‡§à ‡§∏‡§ï‡§æ‡§∞‡§æ‡§§‡•ç‡§Æ‡§ï ‡§¨‡§®‡§æ‡§â‡§õ ‡•§&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sankalpa&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‡§Æ ‡§Ø‡•ã ‡§ï‡§æ‡§Æ ‡§ó‡§∞‡•ç‡§õ‡•Å ‡§≠‡§®‡•á‡§™‡§õ‡§ø ‡§ó‡§∞‡•ç‡§õ‡•Å ‡§ó‡§∞‡•ç‡§õ‡•Å, ‡§ú‡§∏‡§∞‡•Ä ‡§®‡§ø ‡§ó‡§∞‡•ç‡§õ‡•Å‡•§&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;little-on-ego-anger-a-id-orgheadline5-a&#34;&gt;Little on Ego Anger&lt;a id=&#34;orgheadline5&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Two types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;swomukhi{self promotional, busy explaining self&amp;amp;pride #inbound}&lt;/li&gt;
&lt;li&gt;param&lt;sub&gt;mukhi&lt;/sub&gt;{bragging about others&amp;rsquo; faults and misdeeds #outbound}&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both are ego, bad things. Just a realization of which catageory self fall into is good enough to raise above it.&lt;/p&gt;

&lt;h3 id=&#34;little-on-stress-a-id-orgheadline6-a&#34;&gt;Little on Stress:&lt;a id=&#34;orgheadline6&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;3 types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;distress {-ve side, unpleasant, harmful, frustrations}&lt;/li&gt;
&lt;li&gt;neustress {neutral stress}&lt;/li&gt;
&lt;li&gt;eustrus {+ve stress, questing self, questioning/exploring unknowns}&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;energy-yet-another-prospective-a-id-orgheadline7-a&#34;&gt;Energy yet another prospective&lt;a id=&#34;orgheadline7&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;OXYZEN&lt;/strong&gt; is energy that drives us, our brain, our heart, process in every cells. We intake oxyzen in 3 forms solid, liquid &amp;amp; gas. Ways we can enhance our oxyzen intake:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gas:

&lt;ul&gt;
&lt;li&gt;long-and-deep breath&lt;/li&gt;
&lt;li&gt;arrangements to get fresh air (early 30 mins walk with morning sun)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;liquid:

&lt;ul&gt;
&lt;li&gt;taking water, 4ltrs a day&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;solid:

&lt;ul&gt;
&lt;li&gt;fresh foods {&lt;del&gt;stale food&lt;/del&gt;; only eat if must}&lt;/li&gt;
&lt;li&gt;green vegetables {‡§π‡§∞‡§ø‡§Ø‡•ã ‡§™‡§∞‡§ø‡§Ø‡•ã }&lt;/li&gt;
&lt;li&gt;fruits{‡§™‡•ã‡§ü‡§ø‡§≤‡•ã ‡§Ö‡§æ‡§®‡§ø ‡§∞‡§∏‡§ø‡§≤‡•ã}&lt;/li&gt;
&lt;li&gt;‡§ú‡§®‡•ç‡§Æ‡•á‡§ï‡•ã ‡§π‡•à‡§® ‡§â‡§Æ‡•ç‡§∞‡•á‡§ï‡•ã ‡§ñ‡§æ‡§Æ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;day-3-a-id-orgheadline14-a&#34;&gt;Day 3&lt;a id=&#34;orgheadline14&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h3 id=&#34;sankalpa-a-id-orgheadline9-a&#34;&gt;Sankalpa&lt;a id=&#34;orgheadline9&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;one buttom to&lt;/li&gt;
&lt;li&gt;backed by true grit &amp;amp; commitment&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;samarpaan-a-id-orgheadline10-a&#34;&gt;Samarpaan&lt;a id=&#34;orgheadline10&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;manastati (‡§Æ‡§®‡§∏‡•ç‡§•‡§ø‡§§‡§ø) vs paristhiti (‡§™‡§∞‡§ø‡§∏‡•ç‡§•‡§ø‡§§‡§ø)&lt;/li&gt;
&lt;li&gt;‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§®‡§ø‡§∞‡§®‡•ç‡§§‡§∞ ‡§ó‡§∞, ‡§ï‡§†‡§ø‡§® ‡§õ, ‡§¨‡§ø‡§ï‡§≤‡•ç‡§™ ‡§ñ‡•ã‡§ú‡•ç‡§®‡•Å ‡§™‡§∞‡•ç‡§õ&lt;/li&gt;
&lt;li&gt;‡§Ø‡§æ ‡§∏‡§Æ‡§∞‡•ç‡§™‡§® (‡§∂‡§∞‡§£‡§æ‡§ó‡§§‡§ø) ‡§ó‡§∞&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;‡§¨‡§∞-‡§§‡§Æ-‡§®-‡§Æ-‡§õ-‡§∏‡§¨-‡§â‡§∞-‡§ú-a-id-orgheadline11-a&#34;&gt;‡§¨‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡•à ‡§õ ‡§∏‡§¨‡•à ‡§â‡§∞‡•ç‡§ú‡§æ&lt;a id=&#34;orgheadline11&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;‡§∏‡•ã‡§ñ ‡§≠‡•Å‡§§ ‡§ï‡•ã ‡§¶‡•Å‡§ñ ‡§π‡•ã, ‡§ö‡§ø‡§®‡•ç‡§§‡§æ ‡§≠‡§µ‡§ø‡§∏‡•ç‡§Ø ‡§ï‡•ã ‡§¶‡•Å‡§ñ ‡§π‡•ã { ‡§¶‡•Å‡§¨‡•à‡§≤‡•á ‡§π‡§æ‡§Æ‡•ç‡§∞‡•ã ‡§â‡§∞‡•ç‡§ú‡§æ ‡§ò‡§ü‡§æ‡§â‡§õ }&lt;/li&gt;
&lt;li&gt;‡§ï‡§∑‡•ç‡§ü ‡§ö‡§æ‡§π‡§ø ‡§¨‡§∞‡•ç‡§§‡§Æ‡§æ‡§®‡§ï‡•ã ‡§¶‡•Å‡§ñ, ‡§§‡§∞ ‡§Ø‡•ã ‡§õ‡•ã‡§ü‡•ã ‡§∏‡§Æ‡§æ‡§Ø‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§Æ‡§æ‡§§‡•ç‡§∞ ‡§π‡•ã ‡•§&lt;/li&gt;
&lt;li&gt;Power of NOW&lt;/li&gt;
&lt;li&gt;Sworga Vs Narga&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;mantra-a-id-orgheadline12-a&#34;&gt;Mantra&lt;a id=&#34;orgheadline12&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;before sleep:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;21.times do
   while breathing in ‡§Æ
   while breathing out ‡§ñ‡•Å‡§∏‡•Ä ‡§õ‡•Å
done
21.times do
   while breathing in ‡§Æ
   while breathing out ‡§∏‡•Å‡§ñ‡•Ä ‡§õ‡•Å
done
21.times do
   while breathing in ‡§Æ
   while breathing out ‡§∂‡§æ‡§®‡•ç‡§§ ‡§õ‡•Å
done
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;after waking up:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;21.times do
   while breathing in ‡§Æ
   while breathing out ‡§∂‡§æ‡§®‡•ç‡§§ ‡§õ‡•Å
done
21.times do
   while breathing in ‡§Æ
   while breathing out ‡§∏‡•Å‡§ñ‡•Ä ‡§õ‡•Å
done
21.times do
   while breathing in ‡§Æ
   while breathing out ‡§ñ‡•Å‡§∏‡•Ä ‡§õ‡•Å
done
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tip-tricks-a-id-orgheadline13-a&#34;&gt;Tip/Tricks:&lt;a id=&#34;orgheadline13&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Now matter how difficult/bad/worse thing happen to you, never let your ‡§Æ‡§® ‡§∞ ‡§≠‡§µ get influenced.&lt;/li&gt;
&lt;li&gt;‡§†‡•ã‡§≤‡•ã ‡§Ö‡§æ‡§Å‡§ü‡•á, ‡§†‡•Å‡§≤‡•à ‡§â‡§∞‡•ç‡§ú‡§æ ‡§Ö‡§æ‡§Å‡§â‡§õ&lt;/li&gt;
&lt;li&gt;long-deep breathing (‡§≤‡§æ‡§Æ‡•ã ‡§ó‡§π‡§ø‡§∞‡•ã ‡§∏‡§æ‡§Å‡§∏)&lt;/li&gt;
&lt;li&gt;oxygen your brain and body via food, air and water. ‡§§‡§æ‡§ú‡§æ ‡§ñ‡§æ‡§Å‡§â, ‡§â‡§Æ‡•ç‡§∞‡•á‡§ï‡•ã ‡§ñ‡§æ‡§Å‡§â-‡§ú‡§®‡•ç‡§Æ‡•á‡§ï‡•ã ‡§®‡§ñ‡§æ‡§Å‡§â&lt;/li&gt;
&lt;li&gt;be in present {either be (sakshi) ‡§∂‡§æ‡§ï‡•ç‡§∑‡§ø, or do (samarpan) ‡§∏‡§Æ‡§∞‡•ç‡§™‡§®}&lt;/li&gt;
&lt;li&gt;put yourself free of negative thoughts, if it arrise do some asaana for 5 mins straight and observe&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>reflection with 4 earth revolutions @cloudfactory.com</title>
      <link>https://thapakazi.github.io/posts/reflection_4_earth_revloutions_back_in_time/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/reflection_4_earth_revloutions_back_in_time/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;its 19May today&amp;#x2026; 4yrs ago it was a different story&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Being in a role: devops@cloudfactory for last ~4yrs of duration, I was able to learn and work with ruby (on rails), play with some 100s of ec2 servers with ansible, paged often about their health/stats(mostly ios), prometheus them &amp;amp; dash few (in clambering graphs), debug some zombies on production (during holidays weekend :/ ), collaborate with some awesome random open-source advocates(great learning times) and best, learned to realize how business directly maps to my tiny shell scripts or yaml files i indent on my editor Emacs. In gist, everyday of it is inspiring, challenging; the more I do it the more I feel good about it.&lt;/p&gt;

&lt;p&gt;With this upbringing, seeking/longing to know more about technology, collaboration and different business needs from highly motivated, open mentors &amp;amp; team has been a habit.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;4 yrs ago&amp;#x2026;hehe&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And now, I would like to explain my self as guy who love to play with terminals &lt;code&gt;they used to say, old habits die hard, it making more sense now&lt;/code&gt; and machines/stacks (&lt;code&gt;damn you containers, you freak me out&lt;/code&gt;), compose/deploy üö¢ them (&lt;code&gt;the laziest part of story, mostly&lt;/code&gt;), instrument them (&lt;code&gt;favourite one&lt;/code&gt;), secure üõ° them and tinker with tools to automate it all.&lt;/p&gt;

&lt;p&gt;Sounds all flashy üõ°, but old days of sed-awk burger wars is always missed. Good things I have a #emacs and #tmux gangs to guff on.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tracking Digital Traces(self)</title>
      <link>https://thapakazi.github.io/posts/tracking_the_digital_traces/</link>
      <pubDate>Thu, 02 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/tracking_the_digital_traces/</guid>
      <description>

&lt;h1 id=&#34;contribs&#34;&gt;Contribs&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Issue: Memory check in % rather than fixed value &lt;a href=&#34;https://github.com/sensu-plugins/sensu-plugins-redis/issues/11&#34;&gt;issue#11&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Needed a feature, asked for it, nobody cared, so made it and shared it üòÖ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It&amp;rsquo;s so funny to create a issue first and address your own issue with a &lt;a href=&#34;https://github.com/sensu-plugins/sensu-plugins-redis/pull/12&#34;&gt;PR&lt;/a&gt; üòå afterwards.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Issue: EC2 inventory script (ec2.py) needs better error messages &amp;amp; guidance &lt;a href=&#34;https://github.com/ansible/ansible/issues/10840&#34;&gt;issue#10840&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Stucked with a problem, googled it, found the solution, felt bad nobody cared about it before. Asked if could write PR, rejected. Tried again but enhancing the docs, finally made it through.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Moral of story, try try until you get it merged üòÄ&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;swag&#34;&gt;Swag&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Merge conflict resolve in EMACS &amp;#x2026;surprisingly exicited to get my tweetüê¶ featured in in Irreal‚Äôs blog: &lt;a href=&#34;http://irreal.org/blog/?p=5651&#34;&gt;Merging with smerge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Autoscaling the servers like a BO$$ üòé</title>
      <link>https://thapakazi.github.io/posts/autoscaling_the_servers_like_a_bo$$_%F0%9F%98%8E/</link>
      <pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/autoscaling_the_servers_like_a_bo$$_%F0%9F%98%8E/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline1&#34;&gt;Background Story&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline2&#34;&gt;Why I did it ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline4&#34;&gt;Assumptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline3&#34;&gt;Is it for me ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline5&#34;&gt;Acknowledgments/Disclaimers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline6&#34;&gt;HOW others can so the same ?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;background-story-a-id-orgheadline1-a&#34;&gt;Background Story&lt;a id=&#34;orgheadline1&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;tldr üòâ&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So this post is more of sharing how we can achieve X with amalgamation of Y,Z&amp;#x2026; where, X =&amp;gt; auto-scaling aws machines Y,Z&amp;#x2026; =&amp;gt; tools like git,ansible&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I work here at &lt;a href=&#34;https://www.cloudfactory.com&#34;&gt;CloudFactory team&lt;/a&gt; to create some meaningful work/opportunities. We are big fan of some good stuffs like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ansible.com/blog/ansible-me-a-sandwich&#34;&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/a&gt; run a task/playbooks on a target host(s); it like you have a simple tool that reads some tasks(simple steps you want your machine/stuffs to be in/with). Its also like; your mom cooking all the foods in kitchen with ease (simple yaml definitions, minimal headaches of overdoing and less hassles of dependencies hail)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aws-ec2&lt;/code&gt; (elastic cloud computing); its like you have some simple api calls and you blow a fully bootstrapped computers of your need in couple of mins; yes of course, assumption is you got some üí∞ to burn. ü§ë&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/EugeneKay/git-jokes/blob/lulz/Jokes.txt&#34;&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt; : the stupid content tracker. its a simple tool that help you change anything in your code with full contorl/freedom in a much collaborative way. learn it, if you have not. or magit-it if do Emacs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sidekiq&lt;/code&gt; (a.k.a Simple, efficient background processing for Ruby)&lt;/li&gt;
&lt;li&gt;list is long, can&amp;rsquo;t write now, must stop.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So this post is more of sharing how we can achieve X with amalgamation of Y,Z&amp;#x2026; where, X =&amp;gt; auto-scaling aws machines Y,Z&amp;#x2026; =&amp;gt; tools like git,ansible&lt;/p&gt;

&lt;h1 id=&#34;why-i-did-it-a-id-orgheadline2-a&#34;&gt;Why I did it ?&lt;a id=&#34;orgheadline2&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;https://thapakazi.github.io/images/github_down.png#floatright&#34; alt=&#34;img&#34; title=&#34;some captions&#34; /&gt;&lt;/p&gt;

&lt;p&gt;At the time of massive ddos: &lt;a href=&#34;https://en.wikipedia.org/wiki/2016_Dyn_cyberattack&#34;&gt;2016 Dyn cyberattack&lt;/a&gt; our auto-scaling strategy was failing too. Reason: &lt;code&gt;Unable to resolve github.com&lt;/code&gt;, since the bootstrap process involved cloning the latest deployed codebase from the &lt;a href=&#34;https://github.com/cloudfactory&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We used to bake &lt;a href=&#34;https://en.wikipedia.org/wiki/Amazon_Machine_Image&#34;&gt;AMIS&lt;/a&gt; (its like an pre-configured virtual disk file on aws ready to turn on and operate with). That means we have much of things hard-coded in those frozen drives. Although the boot-up process used to configure the new machines with &lt;code&gt;ansible&lt;/code&gt; hooked up from rc.local scripts, the whole process was its-self statically trapped inside. So as the our auto-scaling metrics started triggering the launch process of new machines, all useless as they were chocking at clone failure, since resolving github to their ips was not working and yes our machines were mostly there.&lt;/p&gt;

&lt;p&gt;I was thinking of hardcoding the ips into poor-man&amp;rsquo;s-dns üòÖ entry.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dig github.com
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;...
 ;; ANSWER SECTION:
 github.com. 126 IN  A  192.30.253.113
 github.com. 126 IN  A  192.30.253.112
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But the scale-up and scale-down was a dynamic, and I need to ansible it every time a new machine wakes up. (At the time, i was not aware of user-data section of autoscaling ü§î, we could have sed in changes dns changes, but /etc/hosts gets dynamically updated with yet another script running for other necessary reasons&amp;#x2026;). We knew bunch of automation stuffs, still we could not sleep well that night, and next workday at office was like üò¥ , hehe.&lt;/p&gt;

&lt;p&gt;Feeling retarded, googling the possibilities, then i got routed to this awesome &lt;a href=&#34;https://rbgeek.wordpress.com/2016/05/15/autoscaling-with-aws-instances-using-ansible-pull/&#34;&gt;blog&lt;/a&gt; and i heard of &lt;code&gt;ansible-pull&lt;/code&gt;. Blazed with the stuffs/steps by the &lt;a href=&#34;https://github.com/arbabnazar&#34;&gt;Lazy Geek&lt;/a&gt; on that post, shared it with my team and pinned it like this is what we need. Period.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://thapakazi.github.io/images/found_the_autoscaling_blog_link.png&#34; alt=&#34;img&#34; title=&#34;found awesome autosclaing blog&#34; /&gt;&lt;/p&gt;

&lt;p&gt;And yesterday&amp;#x2026; this came true and I am writing this post on my rooftop üòÑ&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://thapakazi.github.io/images/autoscaling_worfklow.png&#34; alt=&#34;img&#34; title=&#34;some captions&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;assumptions-a-id-orgheadline4-a&#34;&gt;Assumptions&lt;a id=&#34;orgheadline4&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;done-is-it-for-me-a-id-orgheadline3-a&#34;&gt;DONE Is it for me ?&lt;a id=&#34;orgheadline3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I might be playing out random beating the bush alone, but whatever/however you think ü§î üò≤ üòß üòÄ üôä&lt;/p&gt;

&lt;p&gt;The context of this post is like, I am puddling:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;aws and ec2 auto-scaling stuffs&lt;/li&gt;
&lt;li&gt;ansible to do my stuffs&lt;/li&gt;
&lt;li&gt;put my bootstrap scripts in some place like github&lt;/li&gt;

&lt;li&gt;&lt;p&gt;use s3 bucket and put the necessary credentials there only accessible via bunch of machines via ~IAM role~(a abstraction on best security practices i like about aws)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Feels like you are in sync /(at least 30% or near, continue; else bail out, goodbye üëã, though some are stubborn enough to bare with me üòÜ)&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;acknowledgments-disclaimers-a-id-orgheadline5-a&#34;&gt;Acknowledgments/Disclaimers&lt;a id=&#34;orgheadline5&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;I am thankful to handful of people who guide/inspire/motivate me get it done. {&lt;a href=&#34;https://github.com/kajisaap&#34;&gt;@kajisaap&lt;/a&gt; &lt;a href=&#34;https://github.com/sameergautam&#34;&gt;@sameergautam&lt;/a&gt; &lt;a href=&#34;https://github.com/arbabnazar&#34;&gt;@arbabnazar&lt;/a&gt;}&lt;/p&gt;

&lt;p&gt;The post is highly biased from the post by &lt;a href=&#34;https://github.com/arbabnazar&#34;&gt;the Lazy Geek&lt;/a&gt; if you get confused üòï or seek for original stuffs, do visit his awesome blog &lt;a href=&#34;https://rbgeek.wordpress.com/2016/05/15/autoscaling-with-aws-instances-using-ansible-pull/&#34;&gt;url&lt;/a&gt;. And do learn and try it, it worth thriving for.&lt;/p&gt;

&lt;h1 id=&#34;how-others-can-so-the-same-a-id-orgheadline6-a&#34;&gt;HOW others can so the same ?&lt;a id=&#34;orgheadline6&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;The whole steps is reproducible as:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;make a dedicated bucket put keys and configs like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[X] push private to bucket and public key to github&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/5096867c650006ef61c670453a2c00f9.js?file=generate_ssh_keys.sh&#34;&gt;&lt;/script&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] use dedicated ssh-config for github&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/5096867c650006ef61c670453a2c00f9.js?file=config&#34;&gt;&lt;/script&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] create new policy and attach it to your IAM role that is to be attached to instance&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/5096867c650006ef61c670453a2c00f9.js?file=autoscale_s3_access_iam_policy.json&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;now we create a launch config for autoscaling scaling lucky we are, we have an idempotent ansible module üòå So lets define few artificats we need as our arsenal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[X] we need a playbook like:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/ce94c2d994d2d845c5512ef5010400ba.js?file=ec2_auto_scaling_launch_gen_with_ansible.yml&#34;&gt;&lt;/script&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] and the vars file&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/ce94c2d994d2d845c5512ef5010400ba.js?file=vars_bg_worker.yml&#34;&gt;&lt;/script&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] with user&lt;sub&gt;data&lt;/sub&gt;&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/ce94c2d994d2d845c5512ef5010400ba.js?file=user_data.sh&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;And yes, I have skipped the AutoScaling Groups Config definitions, which we are going manual this time(hope could be ansiblize too&amp;#x2026; but that&amp;rsquo;s for future)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;oh, its you made it till end&amp;#x2026; yeah that&amp;rsquo;s all about it, its easy, isn&amp;rsquo;t it üôä&lt;/p&gt;

&lt;p&gt;Post is kind of work in progress&amp;#x2026; Its laready 186 lines&amp;#x2026;so i will continue the rest of story in next post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>lvm kungfu</title>
      <link>https://thapakazi.github.io/posts/lvm_with_raid_basics/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/lvm_with_raid_basics/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[X] involves the lvm stuffs&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[X] mdadm setup and command&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mdadm -v --create -c 256 /dev/md0 --level=0 --raid-devices=2 /dev/xvdf /dev/xvdg
mdadm: chunk size defaults to 512K
mdadm: Defaulting to version 1.2 metadata
mdadm: array /dev/md0 started.
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] next is physical volume&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pvcreate /dev/md0
Physical volume &amp;quot;/dev/md0&amp;quot; successfully created
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] Next is volume group&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vgcreate vg0 /dev/md0
Volume group &amp;quot;vg0&amp;quot; successfully created
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] Next is logical volume&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;lvcreate -n data -l 100%FREE /dev/vg0 
Logical volume &amp;quot;data&amp;quot; created
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] format the disk, before using it&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkfs.xfs /dev/vg0/data 
log stripe unit (524288 bytes) is too large (maximum is 256KiB)
log stripe unit adjusted to 32KiB
meta-data=/dev/vg0/data          isize=256    agcount=16, agsize=8388480 blks
=                       sectsz=512   attr=2, projid32bit=0
data     =                       bsize=4096   blocks=134215680, imaxpct=25
=                       sunit=128    swidth=256 blks
naming   =version 2              bsize=4096   ascii-ci=0
log      =internal log           bsize=4096   blocks=65536, version=2
=                       sectsz=512   sunit=8 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] mount, fix permission and enjoy(warm up disk)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mount /dev/vg0/data /data/
dd if=/dev/urandom | pv | dd of=/data/data.zero
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Lets spin the server inside vpc</title>
      <link>https://thapakazi.github.io/posts/ansible_bools_are_awesome/</link>
      <pubDate>Fri, 14 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/ansible_bools_are_awesome/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: test boolean
  hosts: all
  vars:
    SPIN_IN_VPC: false
  connection: local
  tasks:
    - shell: xcowsay &#39;spinnning in vpc&#39;
      when: SPIN_IN_VPC|bool
    - shell: xcowsay &#39;spinnning in classic world :(&#39;
      when: not SPIN_IN_VPC|bool
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Random Ideas in my head I want to puddle</title>
      <link>https://thapakazi.github.io/posts/projects_list/</link>
      <pubDate>Fri, 14 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/projects_list/</guid>
      <description>

&lt;h1 id=&#34;utility-a-id-orgheadline1-a&#34;&gt;Utility&lt;a id=&#34;orgheadline1&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;table border=&#34;2&#34; cellspacing=&#34;0&#34; cellpadding=&#34;6&#34; rules=&#34;groups&#34; frame=&#34;hsides&#34;&gt;


&lt;colgroup&gt;
&lt;col  class=&#34;org-left&#34; /&gt;

&lt;col  class=&#34;org-left&#34; /&gt;

&lt;col  class=&#34;org-left&#34; /&gt;

&lt;col  class=&#34;org-left&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&#34;col&#34; class=&#34;org-left&#34;&gt;project&lt;/th&gt;
&lt;th scope=&#34;col&#34; class=&#34;org-left&#34;&gt;descriptions&lt;/th&gt;
&lt;th scope=&#34;col&#34; class=&#34;org-left&#34;&gt;Purpose&lt;/th&gt;
&lt;th scope=&#34;col&#34; class=&#34;org-left&#34;&gt;ideaof&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;battigo&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;batti in go (&lt;del&gt;no bash&lt;/del&gt;)&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;learning go the hard way&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;api.anubad.io&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;anubad api version&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;collaboration, scaling up words&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;paledai&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;a rest api listening to fire ansible&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;for autoscaling&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;codetree&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;a tree view generator of a ROR app&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;tree for code, #livepreview&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;javanux&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td class=&#34;org-left&#34;&gt;whoisshe&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;a contact book manager&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;a contact list manager&lt;/td&gt;
&lt;td class=&#34;org-left&#34;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&#34;a-id-orgheadline2-a&#34;&gt;&lt;a id=&#34;orgheadline2&#34;&gt;&lt;/a&gt;&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>Partial publish blog</title>
      <link>https://thapakazi.github.io/posts/partial_publish/</link>
      <pubDate>Mon, 10 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/partial_publish/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgac72cf4&#34;&gt;Recovering my broken blog gen&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#org85703f5&#34;&gt;History of it all&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orge7e1e00&#34;&gt;Define content dir&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgc713ccb&#34;&gt;The next two functions care that all needed property drawers exist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgc75fbdc&#34;&gt;Github flavoured markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgd5edd5d&#34;&gt;Hugo function to blog all the things&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#org94a7991&#34;&gt;Binding the key&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id=&#34;orgac72cf4&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;recovering-my-broken-blog-gen&#34;&gt;Recovering my broken blog gen&lt;/h1&gt;

&lt;p&gt;As time passed by, I was left with my broken emacs configs. &lt;a href=&#34;https://github.com/bnaysakya&#34;&gt;bnaysakya&lt;/a&gt; was asking me to push my configs, sadly it was not that easy, until I had this idea to re-do my configs once again from scratch. By scratch, I mean from fresh emacs setup, I used to compile it earlier, that how it all started to crash.&lt;/p&gt;

&lt;p&gt;Today I am here, using this &lt;a href=&#34;https://hub.docker.com/r/jare/emacs/builds/&#34;&gt;ubuntu:emacs from jare&lt;/a&gt; and able to get my configs back. No longer are the worries of stale configs and broken setup. Yes, I am composing this small post from a random container &lt;code&gt;bff6ea8dc91c&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you are wondering how I got this far, here are my steps&amp;#x2026;anyone can reproduce it with ease:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;clone &lt;a href=&#34;https://github.com/thapakazi/.emacs.d/tree/re_iterate&#34;&gt;my configs :re&lt;sub&gt;iterate&lt;/sub&gt; branch&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;start your container: I am heavily depending on &lt;a href=&#34;https://hub.docker.com/r/jare/emacs/builds/&#34;&gt;jare&amp;rsquo;s container&lt;/a&gt; images here&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;emacs_me(){
    EMACS_I_WANT_TO_USE=${EMACS_DOCKER_IMAGE:-jare/emacs}
    BLOG_CONTENTS_INSIDE_EMACS=/home/emacs/blog_contents/
    docker run -ti --rm \
       --name $(echo ${EMACS_I_WANT_TO_USE}|shasum |cut -d&#39; &#39; -f1) \
       -e HUGO_CONTENT_PROJECT_DIR=$BLOG_CONTENTS_INSIDE_EMACS/ \
           -e DISPLAY=&amp;quot;unix$DISPLAY&amp;quot;\
           -e UNAME=&amp;quot;emacser&amp;quot;\
           -e GNAME=&amp;quot;emacsers&amp;quot;\
           -e UID=&amp;quot;1000&amp;quot;\
           -e GID=&amp;quot;1000&amp;quot;\
       -v /tmp/.X11-unix:/tmp/.X11-unix:ro \
           -v ~/.emacs.docker:/home/emacs/.emacs.d \
           -v ~/.gitconfig:/home/emacs/.gitconfig \
       -v $MY_HUGO_CONTENT_PROJECT_DIR:$BLOG_CONTENTS_INSIDE_EMACS \
       &amp;quot;$EMACS_I_WANT_TO_USE&amp;quot; emacs ${DEBUG_FLAG}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;export your hugo project dir, where your markdown resides&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export HUGO_CONTENT_PROJECT_DIR=/path_to_my/hugo/markdown_files/content/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;start your function&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export EMACS_DOCKER_IMAGE=jare/emacs:latest DEBUG_FLAG=&#39;--debug-init&#39;; emacs_me
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am assuming you have few things here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you have played with docker earlier, good internet bandwidth&lt;/li&gt;
&lt;li&gt;you know how to modify the &lt;code&gt;emacs_me&lt;/code&gt; script above&lt;/li&gt;
&lt;li&gt;you know the debug &lt;a href=&#34;https://github.com/JAremko/docker-emacs#gnulinux&#34;&gt;steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;yes, you are in linux machine ;) else good luck figuring out the way to share you X resource&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id=&#34;org85703f5&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;history-of-it-all&#34;&gt;History of it all&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;my old posts, where I found hugo and learnt to glue it with org-mode.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before &lt;code&gt;hugo&lt;/code&gt; i was like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;days spent saying &amp;ldquo;I will blog soon&amp;rdquo;&lt;/li&gt;
&lt;li&gt;since org mode is soo adivtive, I need to find sth that floats with it&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rhoit.com&#34;&gt;@rhoit&lt;/a&gt; dai started making &lt;a href=&#34;https://github.com/rhoit/bekar-static-gen&#34;&gt;bekar-static-gen&lt;/a&gt;, but i no nothing about html/css stuffs, so i stay in shadow&lt;/li&gt;
&lt;li&gt;again after month, I started publishing org to html, it was ok, but I guessed I couldn&amp;rsquo;t scale, so again stopped&lt;/li&gt;
&lt;li&gt;again, found a &lt;a href=&#34;http://yagnesh.org/2015/02/19/elisp_wrapper_for_tinkerer.html&#34;&gt;emacs guy&lt;/a&gt; using &lt;a href=&#34;http://www.tinkerer.me/&#34;&gt;tikerer&lt;/a&gt; to publish his blog; got exicited üòÉ and started tinkerering myself. It was like :feelsgoodman: feeling. But static stuffs broke, and I felt üòû again&amp;#x2026; still was pushing some orgs&amp;#x2026; reached upto 3 posts and kinda stopped.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;then &lt;code&gt;HUGO&lt;/code&gt; happened&amp;#x2026; Not sure, but its what I was looking for&amp;#x2026; I was having +ve intutions. &lt;a href=&#34;https://github.com/gilesp/vurtcouk/issues/1&#34;&gt;#few stories&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After few hrs, i tried this &lt;a href=&#34;http://www.holgerschurig.de/en/emacs-blog-from-org-to-hugo/&#34;&gt;blog&lt;/a&gt;. And here I am, semi-ready to publish this post üò•.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;few helps from hugo, making the &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/#hosting-personal-organization-pages&#34;&gt;org2blog2github&lt;/a&gt; workflow easier.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks to all for sharing your knowledge on this thing called internet and obviously the makers of HUGO. ü§ó&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Rest of story on how to make emacs, a blog generator. Everything is copied blindly from &lt;a href=&#34;http://www.holgerschurig.de/en/emacs-blog-from-org-to-hugo/&#34;&gt;Holger Schurig&amp;rsquo;s Blog&lt;/a&gt;. ‚òï for him.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id=&#34;orge7e1e00&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;define-content-dir&#34;&gt;Define content dir&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;;; This is GPLv2. If you still don&#39;t know the details, read
;; http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html

(defvar hugo-content-dir (getenv &amp;quot;HUGO_CONTENT_PROJECT_DIR&amp;quot;)
  &amp;quot;Path to Hugo&#39;s content directory&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a id=&#34;orgc713ccb&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-next-two-functions-care-that-all-needed-property-drawers-exist&#34;&gt;The next two functions care that all needed property drawers exist&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;
;; This is GPLv2. If you still don&#39;t know the details, read
;; http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html

(defun hugo-ensure-property (property)
  &amp;quot;Make sure that a property exists. If not, it will be created.

Returns the property name if the property has been created,
otherwise nil.&amp;quot;
  (if (org-entry-get nil property)
      nil
    (progn (org-entry-put nil property &amp;quot;&amp;quot;)
           property)))

(defun hugo-ensure-properties ()
  &amp;quot;This ensures that several properties exists. If not, these
properties will be created in an empty form. In this case, the
drawer will also be opened and the cursor will be positioned
at the first element that needs to be filled.

Returns list of properties that still must be filled in&amp;quot;
  (require &#39;dash)
  (let ((current-time (format-time-string (org-time-stamp-format t t) (org-current-time)))
        first)
    (save-excursion
      (unless (org-entry-get nil &amp;quot;TITLE&amp;quot;)
        (org-entry-put nil &amp;quot;TITLE&amp;quot; (nth 4 (org-heading-components))))
      (setq first (--first it (mapcar #&#39;hugo-ensure-property &#39;(&amp;quot;HUGO_TAGS&amp;quot; &amp;quot;HUGO_TOPICS&amp;quot; &amp;quot;HUGO_FILE&amp;quot;))))
      (unless (org-entry-get nil &amp;quot;HUGO_DATE&amp;quot;)
        (org-entry-put nil &amp;quot;HUGO_DATE&amp;quot; current-time)))
    (when first
      (goto-char (org-entry-beginning-position))
      ;; The following opens the drawer
      (forward-line 1)
      (beginning-of-line 1)
      (when (looking-at org-drawer-regexp)
        (org-flag-drawer nil))
      ;; And now move to the drawer property
      (search-forward (concat &amp;quot;:&amp;quot; first &amp;quot;:&amp;quot;))
      (end-of-line))
    first))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a id=&#34;orgc75fbdc&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;github-flavoured-markdown&#34;&gt;Github flavoured markdown&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;(use-package ox-gfm
  :config
  (require &#39;ox-gfm))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a id=&#34;orgd5edd5d&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;hugo-function-to-blog-all-the-things&#34;&gt;Hugo function to blog all the things&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;;; This is GPLv2. If you still don&#39;t know the details, read
;; http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html

(defun hugo ()
  (interactive)
  (unless (hugo-ensure-properties)
    (let* ((title    (concat &amp;quot;title = \&amp;quot;&amp;quot; (org-entry-get nil &amp;quot;TITLE&amp;quot;) &amp;quot;\&amp;quot;\n&amp;quot;))
           (date     (concat &amp;quot;date = \&amp;quot;&amp;quot; (format-time-string &amp;quot;%Y-%m-%d&amp;quot; (apply &#39;encode-time (org-parse-time-string (org-entry-get nil &amp;quot;HUGO_DATE&amp;quot;))) t) &amp;quot;\&amp;quot;\n&amp;quot;))
           (topics   (concat &amp;quot;topics = [ \&amp;quot;&amp;quot; (mapconcat &#39;identity (split-string (org-entry-get nil &amp;quot;HUGO_TOPICS&amp;quot;) &amp;quot;\\( *, *\\)&amp;quot; t) &amp;quot;\&amp;quot;, \&amp;quot;&amp;quot;) &amp;quot;\&amp;quot; ]\n&amp;quot;))
           (tags     (concat &amp;quot;tags = [ \&amp;quot;&amp;quot; (mapconcat &#39;identity (split-string (org-entry-get nil &amp;quot;HUGO_TAGS&amp;quot;) &amp;quot;\\( *, *\\)&amp;quot; t) &amp;quot;\&amp;quot;, \&amp;quot;&amp;quot;) &amp;quot;\&amp;quot; ]\n&amp;quot;))
           (fm (concat &amp;quot;+++\n&amp;quot;
                       title
                       date
                       tags
                       topics
                       &amp;quot;+++\n\n&amp;quot;))
           (file     (org-entry-get nil &amp;quot;HUGO_FILE&amp;quot;))
           (coding-system-for-write buffer-file-coding-system)
           (backend  &#39;md)
           (blog))
      ;; try to load org-mode/contrib/lisp/ox-gfm.el and use it as backend
      (if (require &#39;ox-gfm nil t)
          (setq backend &#39;gfm)
        (require &#39;ox-md))
      (setq blog (org-export-as backend t))
      ;; Normalize save file path
      (unless (string-match &amp;quot;^[/~]&amp;quot; file)
        (setq file (concat hugo-content-dir file))
        (unless (string-match &amp;quot;\\.md$&amp;quot; file)
          (setq file (concat file &amp;quot;.md&amp;quot;)))
        ;; save markdown
        (with-temp-buffer
          (insert fm)
          (insert blog)
          (untabify (point-min) (point-max))
          (write-file file)
          (message &amp;quot;Exported to %s&amp;quot; file))
        ))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a id=&#34;org94a7991&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;binding-the-key&#34;&gt;Binding the key&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-emacs-lisp&#34;&gt;   (bind-key &amp;quot;M-g h&amp;quot; #&#39;hugo)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Playing with bots for some serious damage üòè</title>
      <link>https://thapakazi.github.io/posts/tinkering%20hubot%20in%20old%20days/</link>
      <pubDate>Tue, 08 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/tinkering%20hubot%20in%20old%20days/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline1&#34;&gt;Motivation&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline2&#34;&gt;How we nailed it.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline3&#34;&gt;In gist:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;motivation-a-id-orgheadline1-a&#34;&gt;Motivation&lt;a id=&#34;orgheadline1&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Adding ssh-keys of a developer,qas never been a fun work to do.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;how-we-nailed-it-a-id-orgheadline2-a&#34;&gt;How we nailed it.&lt;a id=&#34;orgheadline2&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;In gist, we automate the whole process in 3 breakdowns:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;collect ips from our rails apps repo from github src code #kudoscflibs #kudooctokit&lt;/li&gt;
&lt;li&gt;pulling &lt;a href=&#34;https://github.com/developer.keys&#34;&gt;public keys from github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pushing to authorized keys list for deploy user&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Ansible is awesome, so is github. &amp;#x2014;randomvoice&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since our ec2-machines are tagged with roles, we have them all in our &lt;strong&gt;config/deploy/environment.rb&lt;/strong&gt; files. Remember the old legecy msg, &lt;code&gt;Public Key *Permission denied (publickey).*&lt;/code&gt; when deploying with &lt;a href=&#34;https://github.com/capistrano/capistrano&#34;&gt;capistrano&lt;/a&gt;. Ho tehi. üòú&lt;/p&gt;

&lt;p&gt;So in details: &lt;code&gt;tl;dr&lt;/code&gt; Steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Requsting sinatra get ip of servers with ansible

&lt;ul&gt;
&lt;li&gt;Ansible hits sinatra endpoint &lt;strong&gt;/getroles&lt;/strong&gt;, pulled the roles first with github-api &lt;code&gt;#awesomeoctokitgem&lt;/code&gt; &lt;code&gt;#sinatraapiforansible&lt;/code&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;        - name: collet hostnames first
          uri:
            url: &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;http://{{SINATRA_URI|default(&amp;#39;localhost:4567&amp;#39;)}}/getroles?repo_name={{REPO_NAME|default(&amp;#39;org/repo&amp;#39;)}}&amp;amp;environment={{ENVIRONMENT|default(&amp;#39;test&amp;#39;)}}&amp;quot;&lt;/span&gt;
            register: registered_ips
            tags:
              - get_ips
&lt;/pre&gt;&lt;/div&gt;

    -   Fetch the ips from sinatra app as a json list&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;        &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;# GET /getroles?repo_name=sprout/worker_paltform&amp;amp;environment=staging&lt;/span&gt;
        get &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;#39;/getroles&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;do&lt;/span&gt;
          content_type &lt;span style=&#34;color: #B8860B&#34;&gt;:json&lt;/span&gt;
          repo_name &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; params&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B8860B&#34;&gt;:repo_name&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;org/repo&amp;quot;&lt;/span&gt;
          environment &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; params&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B8860B&#34;&gt;:environment&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;testing&amp;quot;&lt;/span&gt;
          config_path &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; params&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B8860B&#34;&gt;:config_path&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;config/deploy/&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; environment &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;.rb&amp;quot;&lt;/span&gt;
          
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#get a login, please get netrc gem first&lt;/span&gt;
          client &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #880000&#34;&gt;Octokit&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #880000&#34;&gt;Client&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;new(&lt;span style=&#34;color: #B8860B&#34;&gt;:netrc&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #AA22FF&#34;&gt;true&lt;/span&gt;)
          
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#pull contents of file&lt;/span&gt;
          file &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;content( repo_name, &lt;span style=&#34;color: #B8860B&#34;&gt;:path&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; config_path)
        
        
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#decode and process&lt;/span&gt;
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#thanks cmthakur, #theKing: https://github.com/cmthakur&lt;/span&gt;
          content_array &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #880000&#34;&gt;Base64&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;decode64(file&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;content)&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;&lt;/span&gt;)
          ec2_roles &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; content_array&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;map &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;content&lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt; 
            &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;if&lt;/span&gt; content&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;scan(&lt;span style=&#34;color: #BB4444&#34;&gt;&amp;#39;IFR&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;count &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;
              content&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;scan(&lt;span style=&#34;color: #BB6688&#34;&gt;/(&amp;#39;(.*?)&amp;#39;|&amp;quot;(.*?)&amp;quot;)/&lt;/span&gt;)&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;flatten&lt;span style=&#34;color: #666666&#34;&gt;[1]&lt;/span&gt;
            &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;end&lt;/span&gt;
          &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;flatten&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;uniq&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;compact
          &lt;span style=&#34;color: #AA22FF&#34;&gt;puts&lt;/span&gt; ec2_roles
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#{roles: ec2_roles}.to_json&lt;/span&gt;
        
        
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#get ips, awesome cflibs&lt;/span&gt;
          ec2_handle &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #880000&#34;&gt;CLOUDFACTORY&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #880000&#34;&gt;AWESOMELIBRARIES&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #880000&#34;&gt;AWSEC2&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;new
          ec2_ips &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;
          ec2_roles&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;role&lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;
            ec2_ips &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ec2_handle&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;IFR(role)&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;map(&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #B8860B&#34;&gt;:ipAddress&lt;/span&gt;)
          &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;end&lt;/span&gt;
          &lt;span style=&#34;color: #AA22FF&#34;&gt;puts&lt;/span&gt; ec2_ips&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;flatten
          {&lt;span style=&#34;color: #B8860B&#34;&gt;ips&lt;/span&gt;: ec2_ips&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;flatten}&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;to_json
        &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    -   Created dynamic inventory list with &lt;strong&gt;add&lt;sub&gt;hosts&lt;/sub&gt;&lt;/strong&gt; module&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;          - name: build strings
            add_host:
              hostname: &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;{{item}}&amp;quot;&lt;/span&gt;
              groups: hosts_to_add_keys
            with_items: registered_ips.json.ips
            tags:
              - get_ips
&lt;/pre&gt;&lt;/div&gt;

-   Pushed public keys to those host with public key lookup &lt;strong&gt;with&lt;sub&gt;url&lt;/sub&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;    - hosts: hosts_to_add_keys
      tasks:
        - name: Set up authorized_keys for the deploy user
          authorized_key:
            user=&amp;quot;deploy&amp;quot;
            key=&amp;quot;{{item}}&amp;quot;
            state=&amp;quot;{{STATE|default(&amp;#39;present&amp;#39;)}}&amp;quot;
          with_url:
            - &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;https://github.com/{{GITHUB_USERNAME|default(&amp;#39;kajisaap&amp;#39;)}}.keys&amp;quot;&lt;/span&gt;
          tags:
            - web_lookup
            
&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id=&#34;in-gist-a-id-orgheadline3-a&#34;&gt;In gist:&lt;a id=&#34;orgheadline3&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;It was a nice weekend fun work saving a lot of time for me and my hangry deploying friends, making everyones happy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1695906/19827082/990902b8-9dbd-11e6-9caf-027d622f99fc.png&#34; alt=&#34;keys on kneez boss :p&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So everyonez lived and deployed/debuged the codebase happily after. üòÑ&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>