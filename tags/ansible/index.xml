<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>org to web</title>
    <link>https://thapakazi.github.io/tags/ansible/index.xml</link>
    <description>Recent content on org to web</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://thapakazi.github.io/tags/ansible/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Autoscaling the servers like a BO$$ 😎</title>
      <link>https://thapakazi.github.io/posts/autoscaling_the_servers_like_a_bo$$_%F0%9F%98%8E/</link>
      <pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/autoscaling_the_servers_like_a_bo$$_%F0%9F%98%8E/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline1&#34;&gt;Background Story&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline2&#34;&gt;Why I did it ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline4&#34;&gt;Assumptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline3&#34;&gt;Is it for me ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline5&#34;&gt;Acknowledgments/Disclaimers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline6&#34;&gt;HOW others can so the same ?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;background-story-a-id-orgheadline1-a&#34;&gt;Background Story&lt;a id=&#34;orgheadline1&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;tldr 😉&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So this post is more of sharing how we can achieve X with amalgamation of Y,Z&amp;#x2026; where, X =&amp;gt; auto-scaling aws machines Y,Z&amp;#x2026; =&amp;gt; tools like git,ansible&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I work here at &lt;a href=&#34;https://www.cloudfactory.com&#34;&gt;CloudFactory team&lt;/a&gt; to create some meaningful work/opportunities. We are big fan of some good stuffs like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ansible.com/blog/ansible-me-a-sandwich&#34;&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/a&gt; run a task/playbooks on a target host(s); it like you have a simple tool that reads some tasks(simple steps you want your machine/stuffs to be in/with). Its also like; your mom cooking all the foods in kitchen with ease (simple yaml definitions, minimal headaches of overdoing and less hassles of dependencies hail)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aws-ec2&lt;/code&gt; (elastic cloud computing); its like you have some simple api calls and you blow a fully bootstrapped computers of your need in couple of mins; yes of course, assumption is you got some 💰 to burn. 🤑&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/EugeneKay/git-jokes/blob/lulz/Jokes.txt&#34;&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt; : the stupid content tracker. its a simple tool that help you change anything in your code with full contorl/freedom in a much collaborative way. learn it, if you have not. or magit-it if do Emacs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sidekiq&lt;/code&gt; (a.k.a Simple, efficient background processing for Ruby)&lt;/li&gt;
&lt;li&gt;list is long, can&amp;rsquo;t write now, must stop.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So this post is more of sharing how we can achieve X with amalgamation of Y,Z&amp;#x2026; where, X =&amp;gt; auto-scaling aws machines Y,Z&amp;#x2026; =&amp;gt; tools like git,ansible&lt;/p&gt;

&lt;h1 id=&#34;why-i-did-it-a-id-orgheadline2-a&#34;&gt;Why I did it ?&lt;a id=&#34;orgheadline2&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;https://thapakazi.github.io/images/github_down.png#floatright&#34; alt=&#34;img&#34; title=&#34;some captions&#34; /&gt;&lt;/p&gt;

&lt;p&gt;At the time of massive ddos: &lt;a href=&#34;https://en.wikipedia.org/wiki/2016_Dyn_cyberattack&#34;&gt;2016 Dyn cyberattack&lt;/a&gt; our auto-scaling strategy was failing too. Reason: &lt;code&gt;Unable to resolve github.com&lt;/code&gt;, since the bootstrap process involved cloning the latest deployed codebase from the &lt;a href=&#34;https://github.com/cloudfactory&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We used to bake &lt;a href=&#34;https://en.wikipedia.org/wiki/Amazon_Machine_Image&#34;&gt;AMIS&lt;/a&gt; (its like an pre-configured virtual disk file on aws ready to turn on and operate with). That means we have much of things hard-coded in those frozen drives. Although the boot-up process used to configure the new machines with &lt;code&gt;ansible&lt;/code&gt; hooked up from rc.local scripts, the whole process was its-self statically trapped inside. So as the our auto-scaling metrics started triggering the launch process of new machines, all useless as they were chocking at clone failure, since resolving github to their ips was not working and yes our machines were mostly there.&lt;/p&gt;

&lt;p&gt;I was thinking of hardcoding the ips into poor-man&amp;rsquo;s-dns 😅 entry.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dig github.com
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;...
 ;; ANSWER SECTION:
 github.com. 126 IN  A  192.30.253.113
 github.com. 126 IN  A  192.30.253.112
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But the scale-up and scale-down was a dynamic, and I need to ansible it every time a new machine wakes up. (At the time, i was not aware of user-data section of autoscaling 🤔, we could have sed in changes dns changes, but /etc/hosts gets dynamically updated with yet another script running for other necessary reasons&amp;#x2026;). We knew bunch of automation stuffs, still we could not sleep well that night, and next workday at office was like 😴 , hehe.&lt;/p&gt;

&lt;p&gt;Feeling retarded, googling the possibilities, then i got routed to this awesome &lt;a href=&#34;https://rbgeek.wordpress.com/2016/05/15/autoscaling-with-aws-instances-using-ansible-pull/&#34;&gt;blog&lt;/a&gt; and i heard of &lt;code&gt;ansible-pull&lt;/code&gt;. Blazed with the stuffs/steps by the &lt;a href=&#34;https://github.com/arbabnazar&#34;&gt;Lazy Geek&lt;/a&gt; on that post, shared it with my team and pinned it like this is what we need. Period.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://thapakazi.github.io/images/found_the_autoscaling_blog_link.png&#34; alt=&#34;img&#34; title=&#34;found awesome autosclaing blog&#34; /&gt;&lt;/p&gt;

&lt;p&gt;And yesterday&amp;#x2026; this came true and I am writing this post on my rooftop 😄&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://thapakazi.github.io/images/autoscaling_worfklow.png&#34; alt=&#34;img&#34; title=&#34;some captions&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;assumptions-a-id-orgheadline4-a&#34;&gt;Assumptions&lt;a id=&#34;orgheadline4&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;done-is-it-for-me-a-id-orgheadline3-a&#34;&gt;DONE Is it for me ?&lt;a id=&#34;orgheadline3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I might be playing out random beating the bush alone, but whatever/however you think 🤔 😲 😧 😀 🙊&lt;/p&gt;

&lt;p&gt;The context of this post is like, I am puddling:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;aws and ec2 auto-scaling stuffs&lt;/li&gt;
&lt;li&gt;ansible to do my stuffs&lt;/li&gt;
&lt;li&gt;put my bootstrap scripts in some place like github&lt;/li&gt;

&lt;li&gt;&lt;p&gt;use s3 bucket and put the necessary credentials there only accessible via bunch of machines via ~IAM role~(a abstraction on best security practices i like about aws)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Feels like you are in sync /(at least 30% or near, continue; else bail out, goodbye 👋, though some are stubborn enough to bare with me 😆)&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;acknowledgments-disclaimers-a-id-orgheadline5-a&#34;&gt;Acknowledgments/Disclaimers&lt;a id=&#34;orgheadline5&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;I am thankful to handful of people who guide/inspire/motivate me get it done. {&lt;a href=&#34;https://github.com/kajisaap&#34;&gt;@kajisaap&lt;/a&gt; &lt;a href=&#34;https://github.com/sameergautam&#34;&gt;@sameergautam&lt;/a&gt; &lt;a href=&#34;https://github.com/arbabnazar&#34;&gt;@arbabnazar&lt;/a&gt;}&lt;/p&gt;

&lt;p&gt;The post is highly biased from the post by &lt;a href=&#34;https://github.com/arbabnazar&#34;&gt;the Lazy Geek&lt;/a&gt; if you get confused 😕 or seek for original stuffs, do visit his awesome blog &lt;a href=&#34;https://rbgeek.wordpress.com/2016/05/15/autoscaling-with-aws-instances-using-ansible-pull/&#34;&gt;url&lt;/a&gt;. And do learn and try it, it worth thriving for.&lt;/p&gt;

&lt;h1 id=&#34;how-others-can-so-the-same-a-id-orgheadline6-a&#34;&gt;HOW others can so the same ?&lt;a id=&#34;orgheadline6&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;The whole steps is reproducible as:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;make a dedicated bucket put keys and configs like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[X] push private to bucket and public key to github&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/5096867c650006ef61c670453a2c00f9.js?file=generate_ssh_keys.sh&#34;&gt;&lt;/script&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] use dedicated ssh-config for github&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/5096867c650006ef61c670453a2c00f9.js?file=config&#34;&gt;&lt;/script&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] create new policy and attach it to your IAM role that is to be attached to instance&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/5096867c650006ef61c670453a2c00f9.js?file=autoscale_s3_access_iam_policy.json&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;now we create a launch config for autoscaling scaling lucky we are, we have an idempotent ansible module 😌 So lets define few artificats we need as our arsenal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[X] we need a playbook like:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/ce94c2d994d2d845c5512ef5010400ba.js?file=ec2_auto_scaling_launch_gen_with_ansible.yml&#34;&gt;&lt;/script&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] and the vars file&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/ce94c2d994d2d845c5512ef5010400ba.js?file=vars_bg_worker.yml&#34;&gt;&lt;/script&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[X] with user&lt;sub&gt;data&lt;/sub&gt;&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/thapakazi/ce94c2d994d2d845c5512ef5010400ba.js?file=user_data.sh&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;And yes, I have skipped the AutoScaling Groups Config definitions, which we are going manual this time(hope could be ansiblize too&amp;#x2026; but that&amp;rsquo;s for future)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;oh, its you made it till end&amp;#x2026; yeah that&amp;rsquo;s all about it, its easy, isn&amp;rsquo;t it 🙊&lt;/p&gt;

&lt;p&gt;Post is kind of work in progress&amp;#x2026; Its laready 186 lines&amp;#x2026;so i will continue the rest of story in next post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lets spin the server inside vpc</title>
      <link>https://thapakazi.github.io/posts/ansible_bools_are_awesome/</link>
      <pubDate>Fri, 14 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/ansible_bools_are_awesome/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: test boolean
  hosts: all
  vars:
    SPIN_IN_VPC: false
  connection: local
  tasks:
    - shell: xcowsay &#39;spinnning in vpc&#39;
      when: SPIN_IN_VPC|bool
    - shell: xcowsay &#39;spinnning in classic world :(&#39;
      when: not SPIN_IN_VPC|bool
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Playing with bots for some serious damage 😏</title>
      <link>https://thapakazi.github.io/posts/tinkering%20hubot%20in%20old%20days/</link>
      <pubDate>Tue, 08 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://thapakazi.github.io/posts/tinkering%20hubot%20in%20old%20days/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline1&#34;&gt;Motivation&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline2&#34;&gt;How we nailed it.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orgheadline3&#34;&gt;In gist:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;motivation-a-id-orgheadline1-a&#34;&gt;Motivation&lt;a id=&#34;orgheadline1&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Adding ssh-keys of a developer,qas never been a fun work to do.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;how-we-nailed-it-a-id-orgheadline2-a&#34;&gt;How we nailed it.&lt;a id=&#34;orgheadline2&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;In gist, we automate the whole process in 3 breakdowns:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;collect ips from our rails apps repo from github src code #kudoscflibs #kudooctokit&lt;/li&gt;
&lt;li&gt;pulling &lt;a href=&#34;https://github.com/developer.keys&#34;&gt;public keys from github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pushing to authorized keys list for deploy user&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Ansible is awesome, so is github. &amp;#x2014;randomvoice&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since our ec2-machines are tagged with roles, we have them all in our &lt;strong&gt;config/deploy/environment.rb&lt;/strong&gt; files. Remember the old legecy msg, &lt;code&gt;Public Key *Permission denied (publickey).*&lt;/code&gt; when deploying with &lt;a href=&#34;https://github.com/capistrano/capistrano&#34;&gt;capistrano&lt;/a&gt;. Ho tehi. 😜&lt;/p&gt;

&lt;p&gt;So in details: &lt;code&gt;tl;dr&lt;/code&gt; Steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Requsting sinatra get ip of servers with ansible

&lt;ul&gt;
&lt;li&gt;Ansible hits sinatra endpoint &lt;strong&gt;/getroles&lt;/strong&gt;, pulled the roles first with github-api &lt;code&gt;#awesomeoctokitgem&lt;/code&gt; &lt;code&gt;#sinatraapiforansible&lt;/code&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;        - name: collet hostnames first
          uri:
            url: &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;http://{{SINATRA_URI|default(&amp;#39;localhost:4567&amp;#39;)}}/getroles?repo_name={{REPO_NAME|default(&amp;#39;org/repo&amp;#39;)}}&amp;amp;environment={{ENVIRONMENT|default(&amp;#39;test&amp;#39;)}}&amp;quot;&lt;/span&gt;
            register: registered_ips
            tags:
              - get_ips
&lt;/pre&gt;&lt;/div&gt;

    -   Fetch the ips from sinatra app as a json list&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;        &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;# GET /getroles?repo_name=sprout/worker_paltform&amp;amp;environment=staging&lt;/span&gt;
        get &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;#39;/getroles&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;do&lt;/span&gt;
          content_type &lt;span style=&#34;color: #B8860B&#34;&gt;:json&lt;/span&gt;
          repo_name &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; params&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B8860B&#34;&gt;:repo_name&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;org/repo&amp;quot;&lt;/span&gt;
          environment &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; params&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B8860B&#34;&gt;:environment&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;testing&amp;quot;&lt;/span&gt;
          config_path &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; params&lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B8860B&#34;&gt;:config_path&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;config/deploy/&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt; environment &lt;span style=&#34;color: #666666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;.rb&amp;quot;&lt;/span&gt;
          
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#get a login, please get netrc gem first&lt;/span&gt;
          client &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #880000&#34;&gt;Octokit&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #880000&#34;&gt;Client&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;new(&lt;span style=&#34;color: #B8860B&#34;&gt;:netrc&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #AA22FF&#34;&gt;true&lt;/span&gt;)
          
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#pull contents of file&lt;/span&gt;
          file &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;content( repo_name, &lt;span style=&#34;color: #B8860B&#34;&gt;:path&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; config_path)
        
        
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#decode and process&lt;/span&gt;
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#thanks cmthakur, #theKing: https://github.com/cmthakur&lt;/span&gt;
          content_array &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #880000&#34;&gt;Base64&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;decode64(file&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;content)&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #BB6622; font-weight: bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;&lt;/span&gt;)
          ec2_roles &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; content_array&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;map &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;content&lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt; 
            &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;if&lt;/span&gt; content&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;scan(&lt;span style=&#34;color: #BB4444&#34;&gt;&amp;#39;IFR&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;count &lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;0&lt;/span&gt;
              content&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;scan(&lt;span style=&#34;color: #BB6688&#34;&gt;/(&amp;#39;(.*?)&amp;#39;|&amp;quot;(.*?)&amp;quot;)/&lt;/span&gt;)&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;flatten&lt;span style=&#34;color: #666666&#34;&gt;[1]&lt;/span&gt;
            &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;end&lt;/span&gt;
          &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;flatten&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;uniq&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;compact
          &lt;span style=&#34;color: #AA22FF&#34;&gt;puts&lt;/span&gt; ec2_roles
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#{roles: ec2_roles}.to_json&lt;/span&gt;
        
        
          &lt;span style=&#34;color: #008800; font-style: italic&#34;&gt;#get ips, awesome cflibs&lt;/span&gt;
          ec2_handle &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #880000&#34;&gt;CLOUDFACTORY&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #880000&#34;&gt;AWESOMELIBRARIES&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #880000&#34;&gt;AWSEC2&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;new
          ec2_ips &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;
          ec2_roles&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;role&lt;span style=&#34;color: #666666&#34;&gt;|&lt;/span&gt;
            ec2_ips &lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; ec2_handle&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;IFR(role)&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;map(&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #B8860B&#34;&gt;:ipAddress&lt;/span&gt;)
          &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;end&lt;/span&gt;
          &lt;span style=&#34;color: #AA22FF&#34;&gt;puts&lt;/span&gt; ec2_ips&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;flatten
          {&lt;span style=&#34;color: #B8860B&#34;&gt;ips&lt;/span&gt;: ec2_ips&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;flatten}&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;to_json
        &lt;span style=&#34;color: #AA22FF; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    -   Created dynamic inventory list with &lt;strong&gt;add&lt;sub&gt;hosts&lt;/sub&gt;&lt;/strong&gt; module&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;          - name: build strings
            add_host:
              hostname: &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;{{item}}&amp;quot;&lt;/span&gt;
              groups: hosts_to_add_keys
            with_items: registered_ips.json.ips
            tags:
              - get_ips
&lt;/pre&gt;&lt;/div&gt;

-   Pushed public keys to those host with public key lookup &lt;strong&gt;with&lt;sub&gt;url&lt;/sub&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;    - hosts: hosts_to_add_keys
      tasks:
        - name: Set up authorized_keys for the deploy user
          authorized_key:
            user=&amp;quot;deploy&amp;quot;
            key=&amp;quot;{{item}}&amp;quot;
            state=&amp;quot;{{STATE|default(&amp;#39;present&amp;#39;)}}&amp;quot;
          with_url:
            - &lt;span style=&#34;color: #BB4444&#34;&gt;&amp;quot;https://github.com/{{GITHUB_USERNAME|default(&amp;#39;kajisaap&amp;#39;)}}.keys&amp;quot;&lt;/span&gt;
          tags:
            - web_lookup
            
&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id=&#34;in-gist-a-id-orgheadline3-a&#34;&gt;In gist:&lt;a id=&#34;orgheadline3&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;It was a nice weekend fun work saving a lot of time for me and my hangry deploying friends, making everyones happy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1695906/19827082/990902b8-9dbd-11e6-9caf-027d622f99fc.png&#34; alt=&#34;keys on kneez boss :p&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So everyonez lived and deployed/debuged the codebase happily after. 😄&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>